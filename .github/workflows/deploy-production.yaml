name: deploy-production

on:
  push:
    branches: [ main ]

jobs:
  web-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn run lint
      - name: Build Web App
        run: yarn nx run-many --target=build --projects=frontend
        shell: bash
      #      - name: Test Web App
      #        run: yarn nx run-many --target=test --projects=frontend --with-deps
  production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm ci
          npx vercel pull --yes --token=${VERCEL_TOKEN}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_NEXTJS }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - run: |
          npx vercel build
        if: github.event_name == 'pull_request_target'
        working-directory: example/nextjs
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_NEXTJS }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      - uses: ./
        id: now-deployment-staging
        if: github.event_name == 'pull_request_target'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_NEXTJS }}
          vercel-args: --prebuilt
          working-directory: example/nextjs
          alias-domains: |
            staging.nextjs.vercel-action.amond.dev
            pr-{{PR_NUMBER}}.nextjs.vercel-action.amond.dev
      - name: production or not
        id: prod_or_not
        run: |
          if [ "$REF" == 'refs/heads/master' ]
          then
              echo "vercel-args=--prod --prebuilt" >> $GITHUB_OUTPUT
          else
              echo "vercel-args=--prebuilt" >> $GITHUB_OUTPUT
          fi
        env:
          REF: ${{ github.ref }}
      - run: |
          npx vercel build --prod
        if: github.event_name == 'push'
        working-directory: example/nextjs
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_NEXTJS }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      - uses: ./
        id: now-deployment-production
        if: github.event_name == 'push'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_NEXTJS }}
          vercel-args: ${{ steps.prod_or_not.outputs.vercel-args }}
