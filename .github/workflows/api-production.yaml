name: api-production
env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
on:
  push:
    branches: [dev]

jobs:
  web-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn run lint
      - name: Build Web App
        run: yarn nx run-many --target=build --projects=backend
        shell: bash
  #      - name: Test Web App
  #        run: yarn nx run-many --target=test --projects=frontend --with-deps
  deploy:
    runs-on: ubuntu-latest
    needs: web-app
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Deploy to Vercel
        run: vercel --prod
