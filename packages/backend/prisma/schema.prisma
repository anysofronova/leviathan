generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  password     String
  email        String   @unique
  firstName    String?
  lastName     String?
  accessToken  String?
  refreshToken String?
  role         Role     @default(USER)
  orders       Order[]

  @@map("users")
}

model Good {
  id               Int         @id @default(autoincrement())
  createdAt        DateTime    @default(now())
  productImage     String
  additionalImages String[]
  name             String
  price            String
  category         String
  designerId       Designer    @relation(fields: [id], references: [id])
  description      String?
  size             String[]
  colors           String[]
  details          String?
  care             String?
  Order            Order?      @relation(fields: [orderId], references: [id])
  orderId          Int?
  orderItem        OrderItem[]
  salePecent       Int         @default(0)
  rating           Int         @default(0)

  @@map("goods")
}

model Designer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String
  image     String
  info      String
  goods     Good[]

  @@map("designers")
}

model Order {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  adress    String
  userId    Int
  goodId    Int
  price     String
  goods     Good[]
  user      User        @relation(fields: [userId], references: [id])
  status    Status
  OrderItem OrderItem[]

  @@map("orders")
}

model OrderItem {
  id      Int   @id @default(autoincrement())
  order   Order @relation(fields: [orderId], references: [id])
  orderId Int
  good    Good  @relation(fields: [goodId], references: [id])
  goodId  Int
}

enum Role {
  USER
  ADMIN
}

enum Category {
  NEW_ARRIVALS
  FEATURED
}

enum Status {
  Pedding
  Delivered
  Cancelled
  Successful
}
