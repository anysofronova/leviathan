generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  password     String
  email        String     @unique
  firstName    String?
  lastName     String?
  accessToken  String?
  refreshToken String?
  role         Role       @default(USER)
  cart         CartItem[] @relation("CartItemuser")
  orders       Order[]
}

model Good {
  id               Int        @id @default(autoincrement())
  createdAt        DateTime   @default(now())
  productImage     String
  additionalImages String[]
  price            String
  name             String
  description      String?
  details          String?
  care             String?
  colors           String[]
  sizes            Size[]
  updatedAt        DateTime   @updatedAt
  rating           Int        @default(0)
  status           GoodStatus @default(AVAILABLE)
  designerId       Int
  category         Category
  cart             CartItem?  @relation("CartItemproduct")
  designer         Designer   @relation(fields: [designerId], references: [id])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Int      @default(1)
  goodId    Int      @unique
  userId    Int
  good      Good     @relation("CartItemproduct", fields: [goodId], references: [id])
  user      User     @relation("CartItemuser", fields: [userId], references: [id])
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?
}

model Designer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String
  image     String
  info      String
  goods     Good[]
}

model Order {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  userId    Int
  address   String
  price     String
  status    Status     @default(PROCESSING)
  user      User       @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

enum Role {
  ADMIN
  USER
}

enum Category {
  MEN
  WOMEN
  KIDS
  ACCESSORIES
  POPULAR
  NEW_ARRIVALS
}

enum GoodStatus {
  AVAILABLE
  UNAVAILABLE
}

enum Status {
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELED
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
  ONE_SIZE
}
