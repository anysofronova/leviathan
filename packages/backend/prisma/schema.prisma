generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  password     String
  email        String   @unique
  firstName    String?
  lastName     String?
  accessToken  String?
  refreshToken String?
  role         Role     @default(USER)
  orders       Order[]

  @@map("users")
}

model Good {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  productImage     String
  additionalImages String[]

  price       String
  name        String
  description String?
  details     String?
  care        String?
  colors      String[]
  sizes       String[]
  updatedAt   DateTime @updatedAt
  salePecent  Int      @default(0)
  rating      Int      @default(0)

  designerId Int
  designer   Designer @relation(fields: [designerId], references: [id])

  category Category
  orders   Order[]  @relation("OrderToGood")

  @@map("goods")
}

model Designer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  name  String
  image String
  info  String

  goods Good[]

  @@map("designers")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  userId Int
  goodId Int
  adress String
  price  String

  status Status @default(PROCESSING)
  goods  Good[] @relation("OrderToGood")
  user   User   @relation(fields: [userId], references: [id])

  @@map("orders")
}

enum Role {
  ADMIN
  USER
}

enum Category {
  MEN
  WOMEN
  KIDS
  ACCESSORIES
}

enum Status {
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELED
}
